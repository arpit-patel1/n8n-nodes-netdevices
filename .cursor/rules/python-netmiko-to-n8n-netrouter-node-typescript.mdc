---
description: 
globs: 
alwaysApply: true
---
üåê Project Goal

Build a robust and modular support system within the Node.js/TypeScript ecosystem to manage network infrastructure (Cisco and Juniper routers, switches, and Linux servers) directly from n8n. This will eliminate reliance on external Python scripts or bridge layers, making native automation in n8n seamless and scalable.

‚∏ª

üß≠ Context & Motivation
	‚Ä¢	Python has a mature and widely-used library called Netmiko (built on top of Paramiko) for SSH-based interaction with network devices.
	‚Ä¢	Currently, Node.js lacks a comparable abstraction, making the development of n8n custom nodes for network management challenging.
	‚Ä¢	This project aims to fill that gap by creating a reusable, extensible Node.js module (or set of helpers) that mirrors Netmiko‚Äôs functionality for core use cases.

‚∏ª

‚úÖ Objectives
	‚Ä¢	Support vendor-specific command execution workflows (initially Cisco IOS and Juniper JunOS).
	‚Ä¢	Provide a clean abstraction layer similar to Netmiko for:
	‚Ä¢	SSH connectivity
	‚Ä¢	Command execution
	‚Ä¢	Error handling
	‚Ä¢	Logging
	‚Ä¢	Session lifecycle management
	‚Ä¢	Build an n8n custom node that utilizes this internal module to perform operations like:
	‚Ä¢	Run CLI commands
	‚Ä¢	Fetch configuration
	‚Ä¢	Apply configuration snippets
	‚Ä¢	Reboot/Reload devices

‚∏ª

üß™ References
	‚Ä¢	Use the Python implementation found in references/netmiko-develop/ strictly as inspiration and reference.
	‚Ä¢	Do not port 1:1 ‚Äî adapt design to Node.js idioms using available SSH libraries like:
	‚Ä¢	ssh2
	‚Ä¢	node-pty (optional)
	‚Ä¢	telnet-client (if telnet support is needed)

‚∏ª

üì¶ Deliverables
	‚Ä¢	A Node.js-based abstraction library similar to Netmiko.
	‚Ä¢	One n8n custom node that utilize the library.

‚∏ª

‚ö†Ô∏è Constraints
	‚Ä¢	This is not a full rewrite of Netmiko ‚Äî focus only on features required by the n8n use case.
	‚Ä¢	Avoid tight coupling with n8n internals ‚Äî keep device communication logic modular and testable in isolation.
	‚Ä¢	Ensure secure handling of credentials and device info (do not log passwords or sensitive data).